async.parallel([
    function(callback){
      console.log('say hello!');



              getVal = [];
              pg.connect(connectionString, function(err, client, done){
                if(err){
                  console.log(err);
                  return callback(err);
                }
                else {
                  var getValQuery = ("select id from users where username='" + req.body.username+ "'");
                  console.log("we are sending over the query");
                  console.log(getValQuery);
                  var query = client.query(getValQuery);
                  query.on('row', function(row){
                    getVal.push(row);
                  });
                  query.on('end', function(){
                    done();
                    pg.end();

                    console.log('and the event phase status we are receiving will be: ');
                    console.log(getVal[0]);
                    });
                  }
                  callback();

                });

    },


], function(err){
    console.log('say goodbye');


    //
    //
    // getVal = [];
    // pg.connect(connectionString, function(err, client, done){
    //   if(err){
    //     console.log(err);
    //   }
    //   else {
    //     var getValQuery = ('select attend_status from survey where id=' + req.body.eventId);
    //     console.log("we are sending over the query");
    //     console.log(getValQuery);
    //     var query = client.query(getValQuery);
    //     query.on('row', function(row){
    //       getVal.push(row);
    //     });
    //     query.on('end', function(){
    //       done();
    //       pg.end();
    //
    //       console.log('and the event phase status we are receiving will be: ');
    //       console.log(getVal[0]);
    //       return res.json(getVal);
    //       });
    //     }
    //   });
    //
    //



http://stackoverflow.com/questions/23757363/how-to-create-non-blocking-asynchronous-function-in-node-js-and-express-js








  }
);
